{"remainingRequest":"/Users/qingfeng/my-vuepress/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qingfeng/my-vuepress/node_modules/vuepress-theme-reform/components/Tags.vue?vue&type=style&index=0&id=e74c3a28&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/qingfeng/my-vuepress/node_modules/vuepress-theme-reform/components/Tags.vue","mtime":499162500000},{"path":"/Users/qingfeng/my-vuepress/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qingfeng/my-vuepress/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/qingfeng/my-vuepress/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/qingfeng/my-vuepress/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/qingfeng/my-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qingfeng/my-vuepress/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhZyB7CiAgbWF4LXdpZHRoOiA2MHJlbTsKICBtYXJnaW46IDAgYXV0bzsKICBwYWRkaW5nOiAxcmVtIDAuNXJlbTsKCiAgLml0ZW1zIHsKICAgIG1hcmdpbi1ib3R0b206IDJyZW07CgogICAgc3BhbiB7CiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgbWFyZ2luOiAwLjVyZW0gMC41cmVtIDAuMnJlbTsKICAgICAgcGFkZGluZzogMC40cmVtIDAuN3JlbTsKICAgICAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94OwogICAgICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3g7CiAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OwogICAgICBib3JkZXItcmFkaXVzOiAwLjJyZW07CiAgICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICAgIGNvbG9yOiAjZmZmOwogICAgICBmb250LXNpemU6IDFyZW07CiAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDAuMjVyZW0gMCBoc2xhKDAsIDAlLCA1NyUsIDAuMjEpOwogICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwoKICAgICAgJi5hY3RpdmUgewogICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTsKICAgICAgfQoKICAgICAgJjpob3ZlciB7CiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Tags.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Tags.vue","sourceRoot":"node_modules/vuepress-theme-reform/components","sourcesContent":["<template>\n  <div>\n    <div class=\"content default\"></div>\n    <div class=\"tag\">\n      <div class=\"items\">\n        <span\n          v-for=\"taginfo in tags\"\n          :style=\"{backgroundColor:color()}\"\n          @click=\"change(taginfo.tag)\"\n          :class=\"taginfo.tag===tg?'active':''\"\n        >{{taginfo.tag}}({{taginfo.number}})</span>\n      </div>\n      <div class=\"article-list\">\n        <Article v-for=\"tag in infos\" :tag=\"tag\" :tg=\"tg\" @turnTo=\"change\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Article from \"@theme/components/Article.vue\";\nexport default {\n  components: {\n    Article\n  },\n  data() {\n    return {\n      info: [],\n      tg: \"\"\n    };\n  },\n  computed: {\n    infos() {\n      return this.info.filter(\n        v => v.frontmatter.tags != null && v.frontmatter.tags.length > 0\n      );\n    },\n    tags() {\n      //核心代码，整合markdown中tags的数目\n      let allTags = [];\n      this.$site.pages.forEach(v => {\n        if (v.frontmatter.tags) {\n          allTags.push(v.frontmatter.tags);\n        } else if (v.frontmatter.tag) {\n          allTags.push(v.frontmatter.tag);\n        }\n      });\n      allTags = allTags.join(\",\").split(\",\");\n      let flatTags = Array.from(new Set(allTags));\n      let all = [\n        {\n          tag: \"全部\",\n          number: this.$site.pages.filter(v => v.title).length\n        }\n      ];\n      return flatTags.reduce((res, v) => {\n        let o = {};\n        o.tag = v;\n        o.number = allTags.filter(value => value === v).length;\n        res.push(o);\n        return res;\n      }, all);\n    }\n  },\n  methods: {\n    change(tag) {\n      //点击标签下面文章显示对应的内容\n      this.tg = tag;\n      if (tag === \"全部\") {\n        this.info = this.$site.pages.filter(v => v.title);\n      } else {\n        this.info = this.$site.pages.filter(v => {\n          let tags = v.frontmatter.tags;\n          if (tags) {\n            return tags.some(v => v === tag);\n          }\n        });\n      }\n      this.info = this.info.sort((pre, next) => {\n        if (pre.lastUpdated === undefined) return 1;\n        if (next.lastUpdated === undefined) return -1;\n        return (\n          new Date(next.lastUpdated).getTime() -\n          new Date(pre.lastUpdated).getTime()\n        );\n      });\n    },\n    color() {\n      // 标签button颜色\n      let colors = [\n        \"#3498DB\",\n        \"#3EAF7C\",\n        \"#5CBBF6\",\n        \"#f5A28E\",\n        \"#f2AC3B\",\n        \"#FA6551\",\n        \"#C68CE0\"\n      ];\n      return colors[parseInt(Math.random() * colors.length)];\n    }\n  },\n  mounted() {\n    //当路由?tag='xxx'时能自动跳转到对应内容\n    let tag = this.$route.query.tag;\n    if (tag) {\n      this.change(tag);\n    } else {\n      this.change(\"全部\");\n    }\n  }\n};\n</script>\n\n<style lang='stylus' scoped>\n.tag {\n  max-width: 60rem;\n  margin: 0 auto;\n  padding: 1rem 0.5rem;\n\n  .items {\n    margin-bottom: 2rem;\n\n    span {\n      vertical-align: middle;\n      cursor: pointer;\n      margin: 0.5rem 0.5rem 0.2rem;\n      padding: 0.4rem 0.7rem;\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      border-radius: 0.2rem;\n      background: #fff;\n      color: #fff;\n      font-size: 1rem;\n      box-shadow: 0 1px 0.25rem 0 hsla(0, 0%, 57%, 0.21);\n      transition: all 0.3s;\n      background-color: red;\n\n      &.active {\n        transform: scale(1.2);\n      }\n\n      &:hover {\n        transform: scale(1.2);\n      }\n    }\n  }\n}\n</style>\n"]}]}